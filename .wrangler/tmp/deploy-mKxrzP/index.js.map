{
  "version": 3,
  "sources": ["../../../worker/index.ts"],
  "sourceRoot": "/Users/samuelodekunle/DEV/StudioManager/.wrangler/tmp/deploy-mKxrzP",
  "sourcesContent": ["type AssetFetcher = {\n  fetch: (request: Request) => Promise<Response>\n}\n\nexport interface Env {\n  ASSETS: AssetFetcher\n  API_ORIGIN: string\n}\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    const url = new URL(request.url)\n\n    // Proxy API requests to the configured origin\n    if (url.pathname.startsWith('/api/')) {\n      const target = new URL(url.pathname + url.search, env.API_ORIGIN)\n      // Clone and sanitize headers (do not set forbidden headers like \"host\")\n      const headers = new Headers(request.headers)\n      headers.delete('host')\n      headers.delete('content-length')\n      headers.delete('accept-encoding')\n\n      const init: RequestInit = {\n        method: request.method,\n        headers,\n        body: ['GET', 'HEAD'].includes(request.method) ? undefined : await request.clone().arrayBuffer(),\n        redirect: 'manual',\n      }\n      const resp = await fetch(target.toString(), init)\n\n      // Pass-through response including cookies and headers from origin\n      const out = new Response(resp.body, {\n        status: resp.status,\n        statusText: resp.statusText,\n        headers: resp.headers,\n      })\n      return out\n    }\n\n    // Serve static assets (SPA fallback)\n    const assetResp = await env.ASSETS.fetch(request)\n    if (assetResp.status === 404 && request.method === 'GET') {\n      // Fallback to index.html for SPA routes\n      const indexUrl = new URL('/index.html', url.origin)\n      return env.ASSETS.fetch(new Request(indexUrl.toString(), request))\n    }\n    return assetResp\n  },\n}\n"],
  "mappings": ";AASA,IAAO,gBAAQ;AAAA,EACb,MAAM,MAAM,SAAkB,KAA6B;AACzD,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAG/B,QAAI,IAAI,SAAS,WAAW,OAAO,GAAG;AACpC,YAAM,SAAS,IAAI,IAAI,IAAI,WAAW,IAAI,QAAQ,IAAI,UAAU;AAEhE,YAAM,UAAU,IAAI,QAAQ,QAAQ,OAAO;AAC3C,cAAQ,OAAO,MAAM;AACrB,cAAQ,OAAO,gBAAgB;AAC/B,cAAQ,OAAO,iBAAiB;AAEhC,YAAM,OAAoB;AAAA,QACxB,QAAQ,QAAQ;AAAA,QAChB;AAAA,QACA,MAAM,CAAC,OAAO,MAAM,EAAE,SAAS,QAAQ,MAAM,IAAI,SAAY,MAAM,QAAQ,MAAM,EAAE,YAAY;AAAA,QAC/F,UAAU;AAAA,MACZ;AACA,YAAM,OAAO,MAAM,MAAM,OAAO,SAAS,GAAG,IAAI;AAGhD,YAAM,MAAM,IAAI,SAAS,KAAK,MAAM;AAAA,QAClC,QAAQ,KAAK;AAAA,QACb,YAAY,KAAK;AAAA,QACjB,SAAS,KAAK;AAAA,MAChB,CAAC;AACD,aAAO;AAAA,IACT;AAGA,UAAM,YAAY,MAAM,IAAI,OAAO,MAAM,OAAO;AAChD,QAAI,UAAU,WAAW,OAAO,QAAQ,WAAW,OAAO;AAExD,YAAM,WAAW,IAAI,IAAI,eAAe,IAAI,MAAM;AAClD,aAAO,IAAI,OAAO,MAAM,IAAI,QAAQ,SAAS,SAAS,GAAG,OAAO,CAAC;AAAA,IACnE;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
